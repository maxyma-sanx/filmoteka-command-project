{"mappings":"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","sources":["src/js/events/watched.js","src/js/events/queue.js","src/js/API/firebaseLibraryAPI.js"],"sourcesContent":["import refs from '../refs';\n\nimport { Loading } from 'notiflix';\n\nimport MovieDB from '../API/fetchMovieAPI';\n\nimport renderMovies from '../render/renderSearchMovies';\nimport onMovieClick from './movieCard';\n\nimport lang from '../utils/checkStorageLang';\n\nconst CURRENT_PAGE = 'current';\n\nconst movieDB = new MovieDB();\n\n// Достаємо проглянуті фільми з локал стореж\nconst parsedWatchedData = JSON.parse(localStorage.getItem('watched'));\n\n// Достаємо поточну сторінку з локал стореж\nconst parsedCurrent = JSON.parse(localStorage.getItem(CURRENT_PAGE));\n\n// Якщо поточної сторінки немає в LocalStorage, то по defaultу\n// буде Watched\nif (!parsedCurrent) {\n  refs.watchedBtn.classList.add('header__library-btn--active');\n  refs.queueBtn.classList.remove('header__library-btn--active');\n  renderWatchedMovies();\n}\n// Перевіряємо чи поточна зараз сторінка Watched\nif (parsedCurrent === 'header__library-btn--watched') {\n  refs.watchedBtn.classList.add('header__library-btn--active');\n  refs.queueBtn.classList.remove('header__library-btn--active');\n  renderWatchedMovies();\n}\n\n// Слухач на вибране кіно\nrefs.movies.addEventListener('click', onMovieClick);\n\n// Слухач на кнопку Watched\nrefs.watchedBtn.addEventListener('click', addClassActive);\n\n// Функція при натисканні на кнопку Watched\nasync function addClassActive() {\n  refs.watchedBtn.classList.add('header__library-btn--active');\n  refs.queueBtn.classList.remove('header__library-btn--active');\n\n  const currentPage = refs.watchedBtn.classList;\n  const res = currentPage[1];\n\n  localStorage.setItem(CURRENT_PAGE, JSON.stringify(res));\n\n  renderWatchedMovies();\n}\n\n// функція рендера контенту на сторінку Watched\nasync function renderWatchedMovies() {\n  if (!parsedWatchedData) {\n    return;\n  }\n\n  Loading.standard();\n\n  const data = await Promise.all(\n    parsedWatchedData.map(async id => {\n      const movieData = await movieDB.fetchMovieDetails(id, lang);\n      return movieData;\n    })\n  );\n\n  if (data) {\n    refs.myLibraryWrap.children[0].style.display = 'block';\n    refs.myLibraryWrap.children[1].style.display = 'block';\n    Loading.remove();\n  }\n\n  const renderMarkup = await renderMovies(data);\n  refs.movies.innerHTML = renderMarkup;\n\n  if (renderMarkup.includes('li class=\"movies__item\"')) {\n    refs.myLibraryWrap.children[0].style.display = 'none';\n    refs.myLibraryWrap.children[1].style.display = 'none';\n  }\n\n  Loading.remove();\n}\n","import refs from '../refs';\n\nimport { Loading } from 'notiflix';\n\nimport MovieDB from '../API/fetchMovieAPI';\n\nimport renderMovies from '../render/renderSearchMovies';\nimport onMovieClick from './movieCard';\n\nimport lang from '../utils/checkStorageLang';\n\nconst CURRENT_PAGE = 'current';\n\nconst movieDB = new MovieDB();\n\n// Достаємо проглянуті фільми з локал стореж\nconst parsedQueueData = JSON.parse(localStorage.getItem('queue'));\n\n// Достаємо поточну сторінку з локал стореж\nconst parsedCurrent = JSON.parse(localStorage.getItem(CURRENT_PAGE));\n\n// Перевіряємо чи поточна зараз сторінка Queue\nif (parsedCurrent === 'header__library-btn--queue') {\n  refs.watchedBtn.classList.remove('header__library-btn--active');\n  refs.queueBtn.classList.add('header__library-btn--active');\n  renderQueueMovies();\n}\n\n// Слухач на вибране кіно\nrefs.movies.addEventListener('click', onMovieClick);\n\n// Слухач на кнопку Watched\nrefs.queueBtn.addEventListener('click', addClassActive);\n\n// Функція при натисканні на кнопку Watched\nasync function addClassActive() {\n  refs.watchedBtn.classList.remove('header__library-btn--active');\n  refs.queueBtn.classList.add('header__library-btn--active');\n\n  const currentPage = refs.queueBtn.classList;\n  const res = currentPage[1];\n\n  localStorage.setItem(CURRENT_PAGE, JSON.stringify(res));\n\n  renderQueueMovies();\n}\n\n// функція рендера контенту на сторінку Queue\nasync function renderQueueMovies() {\n  if (!parsedQueueData) {\n    return;\n  }\n\n  Loading.standard();\n\n  const data = await Promise.all(\n    parsedQueueData.map(async id => {\n      const movieData = await movieDB.fetchMovieDetails(id, lang);\n      return movieData;\n    })\n  );\n\n  if (data) {\n    refs.myLibraryWrap.children[0].style.display = 'block';\n    refs.myLibraryWrap.children[1].style.display = 'block';\n    Loading.remove();\n  }\n\n  const renderMarkup = await renderMovies(data);\n  refs.movies.innerHTML = renderMarkup;\n\n  if (renderMarkup.includes('li class=\"movies__item\"')) {\n    refs.myLibraryWrap.children[0].style.display = 'none';\n    refs.myLibraryWrap.children[1].style.display = 'none';\n  }\n\n  Loading.remove();\n}\n","import refs from '../refs';\n\nimport { Notify } from 'notiflix';\n\nimport { getAuth, signOut } from 'firebase/auth';\nimport { app } from '../../firebase-config';\n\nconst auth = getAuth(app);\n\nrefs.googleSignOutFromLibrary.addEventListener('click', signOutFromGoogle);\n\n// Вийти з аккаунта гугл\nfunction signOutFromGoogle() {\n  signOut(auth)\n    .then(() => {\n      localStorage.removeItem('auth');\n    })\n    .catch(error => {\n      Notify.failure(`${error.message}`);\n    });\n}\n\nexport { signOutFromGoogle };\n"],"names":["$bpxeT","parcelRequire","$f803e83941f9b41b$var$CURRENT_PAGE","$f803e83941f9b41b$var$movieDB","$f7J5Q","default","$f803e83941f9b41b$var$parsedWatchedData","JSON","parse","localStorage","getItem","$f803e83941f9b41b$var$parsedCurrent","$f803e83941f9b41b$var$_addClassActive","$parcel$interopDefault","$2TvXO","mark","_callee","currentPage","res","$4Nugj","watchedBtn","classList","add","queueBtn","remove","setItem","stringify","$f803e83941f9b41b$var$renderWatchedMovies","apply","this","arguments","$f803e83941f9b41b$var$_renderWatchedMovies","_callee1","data","renderMarkup","$iU1Pc","Loading","standard","Promise","all","map","id","movieData","fetchMovieDetails","$ayUZl","_ctx","sent","_ctx1","myLibraryWrap","children","style","display","$xjavX","movies","innerHTML","includes","addEventListener","$cA2C5","$e45b61bd372b84a6$var$CURRENT_PAGE","$e45b61bd372b84a6$var$movieDB","$e45b61bd372b84a6$var$parsedQueueData","$e45b61bd372b84a6$var$_addClassActive","$e45b61bd372b84a6$var$renderQueueMovies","$e45b61bd372b84a6$var$_renderQueueMovies","$28d40fbca99109c7$var$auth","$gQOBw","getAuth","$3WUaf","app","googleSignOutFromLibrary","signOut","then","removeItem","catch","error","Notify","failure","concat","message"],"version":3,"file":"library.737eb540.js.map"}