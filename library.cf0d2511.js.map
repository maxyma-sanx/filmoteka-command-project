{"mappings":"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","sources":["src/js/events/watched.js","src/js/events/queue.js","src/js/API/firebaseLibraryAPI.js"],"sourcesContent":["import refs from '../refs';\n\nimport { Loading } from 'notiflix';\n\nimport MovieDB from '../API/fetchMovieAPI';\n\nimport renderMovies from '../render/renderSearchMovies';\nimport onMovieClick from './movieCard';\n\nimport lang from '../utils/checkStorageLang';\n\nconst CURRENT_PAGE = 'current';\n\nconst movieDB = new MovieDB();\n\n// Достаємо проглянуті фільми з локал стореж\nconst parsedWatchedData = JSON.parse(localStorage.getItem('watched'));\n\n// Достаємо поточну сторінку з локал стореж\nconst parsedCurrent = JSON.parse(localStorage.getItem(CURRENT_PAGE));\n\n// Якщо поточної сторінки немає в LocalStorage, то по defaultу\n// буде Watched\nif (!parsedCurrent) {\n  refs.watchedBtn.classList.add('header__library-btn--active');\n  refs.queueBtn.classList.remove('header__library-btn--active');\n  renderWatchedMovies();\n}\n// Перевіряємо чи поточна зараз сторінка Watched\nif (parsedCurrent === 'header__library-btn--watched') {\n  refs.watchedBtn.classList.add('header__library-btn--active');\n  refs.queueBtn.classList.remove('header__library-btn--active');\n  renderWatchedMovies();\n}\n\n// Слухач на вибране кіно\nrefs.movies.addEventListener('click', onMovieClick);\n\n// Слухач на кнопку Watched\nrefs.watchedBtn.addEventListener('click', addClassActive);\n\n// Функція при натисканні на кнопку Watched\nasync function addClassActive() {\n  refs.watchedBtn.classList.add('header__library-btn--active');\n  refs.queueBtn.classList.remove('header__library-btn--active');\n\n  const currentPage = refs.watchedBtn.classList;\n  const res = currentPage[1];\n\n  localStorage.setItem(CURRENT_PAGE, JSON.stringify(res));\n\n  renderWatchedMovies();\n}\n\n// функція рендера контенту на сторінку Watched\nasync function renderWatchedMovies() {\n  if (!parsedWatchedData) {\n    return;\n  }\n\n  Loading.standard();\n\n  const data = await Promise.all(\n    parsedWatchedData.map(async id => {\n      const movieData = await movieDB.fetchMovieDetails(id, lang);\n      return movieData;\n    })\n  );\n\n  if (data) {\n    refs.myLibraryWrap.children[0].style.display = 'block';\n    refs.myLibraryWrap.children[1].style.display = 'block';\n    Loading.remove();\n  }\n\n  const renderMarkup = await renderMovies(data);\n  refs.movies.innerHTML = renderMarkup;\n\n  if (renderMarkup.includes('li class=\"movies__item\"')) {\n    refs.myLibraryWrap.children[0].style.display = 'none';\n    refs.myLibraryWrap.children[1].style.display = 'none';\n  }\n\n  Loading.remove();\n}\n","import refs from '../refs';\n\nimport { Loading } from 'notiflix';\n\nimport MovieDB from '../API/fetchMovieAPI';\n\nimport renderMovies from '../render/renderSearchMovies';\nimport onMovieClick from './movieCard';\n\nimport lang from '../utils/checkStorageLang';\n\nconst CURRENT_PAGE = 'current';\n\nconst movieDB = new MovieDB();\n\n// Достаємо проглянуті фільми з локал стореж\nconst parsedQueueData = JSON.parse(localStorage.getItem('queue'));\n\n// Достаємо поточну сторінку з локал стореж\nconst parsedCurrent = JSON.parse(localStorage.getItem(CURRENT_PAGE));\n\n// Перевіряємо чи поточна зараз сторінка Queue\nif (parsedCurrent === 'header__library-btn--queue') {\n  refs.watchedBtn.classList.remove('header__library-btn--active');\n  refs.queueBtn.classList.add('header__library-btn--active');\n  renderQueueMovies();\n}\n\n// Слухач на вибране кіно\nrefs.movies.addEventListener('click', onMovieClick);\n\n// Слухач на кнопку Watched\nrefs.queueBtn.addEventListener('click', addClassActive);\n\n// Функція при натисканні на кнопку Watched\nasync function addClassActive() {\n  refs.watchedBtn.classList.remove('header__library-btn--active');\n  refs.queueBtn.classList.add('header__library-btn--active');\n\n  const currentPage = refs.queueBtn.classList;\n  const res = currentPage[1];\n\n  localStorage.setItem(CURRENT_PAGE, JSON.stringify(res));\n\n  renderQueueMovies();\n}\n\n// функція рендера контенту на сторінку Queue\nasync function renderQueueMovies() {\n  if (!parsedQueueData) {\n    return;\n  }\n\n  Loading.standard();\n\n  const data = await Promise.all(\n    parsedQueueData.map(async id => {\n      const movieData = await movieDB.fetchMovieDetails(id, lang);\n      return movieData;\n    })\n  );\n\n  if (data) {\n    refs.myLibraryWrap.children[0].style.display = 'block';\n    refs.myLibraryWrap.children[1].style.display = 'block';\n    Loading.remove();\n  }\n\n  const renderMarkup = await renderMovies(data);\n  refs.movies.innerHTML = renderMarkup;\n\n  if (renderMarkup.includes('li class=\"movies__item\"')) {\n    refs.myLibraryWrap.children[0].style.display = 'none';\n    refs.myLibraryWrap.children[1].style.display = 'none';\n  }\n\n  Loading.remove();\n}\n","import refs from '../refs';\n\nimport { Notify } from 'notiflix';\n\nimport { getAuth, signOut } from 'firebase/auth';\nimport { app } from '../../firebase-config';\n\nconst auth = getAuth(app);\n\nrefs.googleSignOutFromLibrary.addEventListener('click', signOutFromGoogle);\n\n// Вийти з аккаунта гугл\nfunction signOutFromGoogle() {\n  signOut(auth)\n    .then(() => {\n      localStorage.removeItem('auth');\n    })\n    .catch(error => {\n      Notify.failure(`${error.message}`);\n    });\n}\n\nexport { signOutFromGoogle };\n"],"names":["$krGWQ","parcelRequire","$1d7f1cafd2436067$var$movieDB","$c55OR","default","$1d7f1cafd2436067$var$parsedWatchedData","JSON","parse","localStorage","getItem","$1d7f1cafd2436067$var$parsedCurrent","async","$1d7f1cafd2436067$var$renderWatchedMovies","$eWCmQ","Loading","standard","data","Promise","all","map","id","fetchMovieDetails","$1K9LT","myLibraryWrap","children","style","display","remove","renderMarkup","$9XGHe","movies","innerHTML","includes","watchedBtn","classList","add","queueBtn","addEventListener","$iyY7Y","res","setItem","stringify","$2c57d8fa63741289$var$movieDB","$2c57d8fa63741289$var$parsedQueueData","$2c57d8fa63741289$var$renderQueueMovies","$5c92e1c9f88fc9d5$var$auth","$eyjy7","getAuth","$8lXmX","app","googleSignOutFromLibrary","signOut","then","removeItem","catch","error","Notify","failure","message"],"version":3,"file":"library.cf0d2511.js.map"}